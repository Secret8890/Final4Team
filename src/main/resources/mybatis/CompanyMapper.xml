<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gjob.backend.mapper.CompanyMapper">
    <select id="select" resultType="CompanyDTO">
        select * from Company order by co_seq desc
    </select>
    <select id="selectAjax" resultType="CompanyDTO">
      <![CDATA[
      select * from (select @rownum:=@rownum+1 as rnum, A.* from (select a.co_seq, a.co_name, a.co_name_href, a.co_title, a.CO_JOB_MID_NAME, a.CO_JOB_NAME, a.CO_LOCATION_NAME, a.CO_CAREER, a.CO_START_DATE, a.co_end_date, a.co_read_count, a.co_url, b.cl_logo from company a left outer join crawling b on a.co_seq=b.co_seq order by a.co_seq desc) A, (select @rownum:=0) R) B where rnum>=#{startRow} and rnum<=#{endRow}
      ]]>
    </select>
    <select id="test" resultType="CompanyDTO">
        select a.co_seq, a.co_name, a.co_name_href, a.co_title, a.CO_JOB_MID_NAME, a.CO_JOB_NAME, a.CO_LOCATION_NAME, a.CO_CAREER, a.CO_START_DATE, a.co_end_date, a.co_read_count, a.co_url, b.cl_logo from company a left outer join crawling b on a.co_seq=b.co_seq limit 5;
    </select>
    <select id="selectCount" resultType="int">
      select count(*) from COMPANY
    </select>
    <select id="selectName" resultType="CompanyDTO" parameterType="String">
        select * from COMPANY where CO_NAME=#{co_name}
    </select>
    <select id="selectBySeq" parameterType="String" resultType="CompanyDTO">
        select * from COMPANY where co_seq=#{co_seq}
    </select>
    <insert id="insert" parameterType="CompanyDTO">
        insert ignore into COMPANY
        (
            co_seq,
            co_name,
            co_name_href,
            co_title,
            co_job_mid_name,
            co_job_name,
            co_location_name,
            co_career,
            co_start_date,
            co_end_date,
            co_read_count,
            co_url,
            co_salary,
            co_job_type,
            co_education
        )
        values
        (
            #{co_seq},
            #{co_name},
            #{co_name_href},
            #{co_title},
            #{co_job_mid_name},
            #{co_job_name},
            #{co_location_name},
            #{co_career},
            #{co_start_date},
            #{co_end_date},
            0,
            #{co_url},
            #{co_salary},
            #{co_job_type},
            #{co_education}
        )
    </insert>
    <update id="update" parameterType="int">
        update COMPANY set CO_READ_COUNT=1 where CO_SEQ =#{co_seq}
	</update>
    <update id="updateCompany" parameterType="CompanyDTO">
        update COMPANY set
        CO_NAME = #{co_name},
        CO_NAME_HREF = #{co_name_href},
        CO_TITLE = #{co_title},
        CO_JOB_MID_NAME = #{co_job_mid_name},
        CO_JOB_NAME = #{co_job_name},
        CO_LOCATION_NAME = #{co_location_name},
        CO_CAREER = #{co_career},
        CO_START_DATE = #{co_start_date},
        CO_END_DATE = #{co_end_date},
        CO_URL = #{co_url},
        CO_SALARY = #{co_salary},
        CO_JOB_TYPE = #{co_job_type},
        CO_EDUCATION = #{co_education} where co_seq=#{co_seq}
    </update>
    <select id="selectByCount" parameterType="int" resultType="int">
        select CO_READ_COUNT from company where CO_SEQ=#{co_seq}
    </select>
    <delete id="deleteByDate" parameterType="String">
        <![CDATA[
        delete from COMPANY where date_format(co_end_date,"%Y-%m-%d")<#{co_end_date}
        ]]>
    </delete>
    <delete id="delete" parameterType="int">
        delete from COMPANY where CO_SEQ=#{co_seq}
    </delete>
    <select id="selectByCapitalArea" resultType="CompanyDTO">
        select * from COMPANY where co_location_name like '서울%' or '경기%' order by co_seq desc limit 30
    </select>
    <select id="selectByEndDate" resultType="CompanyDTO">
        select * from company where co_end_date=curdate() order by co_seq desc limit 30
    </select>
    <select id="selectByEndDateLogin" parameterType="String" resultType="CompanyDTO">
        select * from company where co_end_date=curdate() and co_job_mid_name like concat('%',#{co_job_mid_name},'%') limit 30
    </select>
    <select id="countByDetailSearch" parameterType="IncruitSearchDTO" resultType="int">
            select count(*) from company
            <where>
            <if test="workSelected != null">
                co_job_mid_name like concat('%',#{workSelected},'%')
            </if>
            <if test="workSelected == null">
                co_job_mid_name like concat('%','%')
            </if>
            <if test="regionSelected !=null ">
                and co_location_name like concat('%',#{regionSelected},'%')
            </if>
            <if test="regionSelected == null">
                and co_location_name like concat('%','%')
            </if>
            <if test="career !=null ">
                and co_career like concat('%',#{career},'%')
            </if>
            <if test="career == null">
                and co_career like concat('%','%')
            </if>
            <if test="work_type !=null ">
                and co_job_type like concat('%',#{work_type},'%')
            </if>
            <if test="work_type == null">
                and co_job_type like concat('%','%')
            </if>
            <if test="education !=null ">
                and co_education like concat('%',#{education},'%')
            </if>
            <if test="education == null">
                and co_education like concat('%','%')
            </if>
            </where>
    </select>
    <select id="searchByDetail" resultType="CompanyDTO">
      select * from (select @rownum:=@rownum+1 as rnum, A.* from (select * from company
            <where>
            <if test="workSelected != null">
                co_job_mid_name like concat('%',#{workSelected},'%')
            </if>
            <if test="workSelected == null">
                co_job_mid_name like concat('%','%')
            </if>
            <if test="regionSelected !=null ">
                and co_location_name like concat('%',#{regionSelected},'%')
            </if>
            <if test="regionSelected == null">
                and co_location_name like concat('%','%')
            </if>
            <if test="career !=null ">
                and co_career like concat('%',#{career},'%')
            </if>
            <if test="career == null">
                and co_career like concat('%','%')
            </if>
            <if test="work_type !=null ">
                and co_job_type like concat('%',#{work_type},'%')
            </if>
            <if test="work_type == null">
                and co_job_type like concat('%','%')
            </if>
            <if test="education !=null ">
                and co_education like concat('%',#{education},'%')
            </if>
            <if test="education == null">
                and co_education like concat('%','%')
            </if>
            </where>) A, (select @rownum:=0) R) B <![CDATA[ where rnum>=#{startRow} and rnum<=#{endRow}
      ]]>
    </select>
    <select id="getTodayIncruitCount" resultType="int">
        select IFNULL(count(*),0) from company where co_start_date=curdate()
    </select>
</mapper>